<Window xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="450"
        Width="1900" Height="900"
        x:Class="MockGUI.MainWindow"
        xmlns:facade="using:GolemLib"
        xmlns:types="using:GolemLib.Types"
        xmlns:view="using:MockGUI.View"
        Title="Facade tester">
    <Window.Styles>
        <Style Selector="TextBlock.Label">
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Margin" Value="0 2 20 2"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
        </Style>
        <Style Selector="TextBlock.Section">
            <Setter Property="FontSize" Value="24"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Margin" Value="0 15 5 15"/>
        </Style>
        <Style Selector="Border.Panel">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Silver"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="CornerRadius" Value="5"/>
            <Setter Property="Padding" Value="4"/>
            <Setter Property="Margin" Value="5"/>
        </Style>
        <Style Selector="ToolTip">
            <Setter Property="VerticalContentAlignment" Value="Stretch"/>
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Setter Property="VerticalAlignment" Value="Stretch"/>
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
            <Setter Property="MaxWidth" Value="Infinity"/>
            <Setter Property="MaxHeight" Value="Infinity"/>
        </Style>
    </Window.Styles>

    <Window.Resources>
        <view:BytesListConverter x:Key="listConverter"/>
        <view:SignatureConverter x:Key="signatureConverter"/>
    </Window.Resources>

    <Window.DataTemplates>
        <DataTemplate DataType="{x:Type facade:IJob}">
            <Border Classes="Panel" ToolTip.ShowDelay="600">
                <Grid ColumnDefinitions="Auto,Auto" RowDefinitions="Auto,Auto,Auto,Auto,Auto,Auto,Auto">
                    <TextBlock Grid.Row="0" Grid.Column="0" Classes="Label">Id</TextBlock>
                    <TextBlock Grid.Row="0" Grid.Column="1" Text="{Binding Id}"/>

                    <TextBlock Grid.Row="1" Grid.Column="0" Classes="Label">Requestor Id</TextBlock>
                    <TextBlock Grid.Row="1" Grid.Column="1" Text="{Binding RequestorId}"/>

                    <TextBlock Grid.Row="2" Grid.Column="0" Classes="Label">Job Status</TextBlock>
                    <TextBlock Grid.Row="2" Grid.Column="1" Text="{Binding Status}"/>
                    
                    <TextBlock Grid.Row="3" Grid.Column="0" Classes="Label">Payment Status</TextBlock>
                    <TextBlock Grid.Row="3" Grid.Column="1" Text="{Binding PaymentStatus}"/>

                    <TextBlock Grid.Row="4" Grid.Column="0" Classes="Label">Timestamp</TextBlock>
                    <TextBlock Grid.Row="4" Grid.Column="1" Text="{Binding Timestamp}"/>

                    <StackPanel Grid.Row="5" Grid.Column="0">
                        <TextBlock FontSize="12" FontWeight="Bold"></TextBlock>
                        <TextBlock FontSize="12" FontWeight="Bold">Price</TextBlock>
                        <TextBlock FontSize="12" FontWeight="Bold">Usage</TextBlock>
                    </StackPanel>

                    <StackPanel Grid.Row="5" Grid.Column="1" Orientation="Horizontal">
                        <StackPanel>
                            <TextBlock FontSize="12" FontWeight="Bold">Start Price</TextBlock>
                            <TextBlock Text="{Binding Price.StartPrice, Mode=TwoWay}" Width="120" />
                            <TextBlock Text="{Binding CurrentUsage.StartPrice, Mode=TwoWay}" Width="120" />
                        </StackPanel>

                        <StackPanel>
                            <TextBlock FontSize="12" FontWeight="Bold">Price per second</TextBlock>
                            <TextBlock Text="{Binding Price.EnvPerSec, Mode=TwoWay}" Width="120" />
                            <TextBlock Text="{Binding CurrentUsage.EnvPerSec, Mode=TwoWay}" Width="120" />
                        </StackPanel>

                        <StackPanel>
                            <TextBlock FontSize="12" FontWeight="Bold">GPU usage</TextBlock>
                            <TextBlock Text="{Binding Price.GpuPerSec, Mode=TwoWay}" Width="120" />
                            <TextBlock Text="{Binding CurrentUsage.GpuPerSec, Mode=TwoWay}" Width="120" />
                        </StackPanel>

                        <StackPanel>
                            <TextBlock FontSize="12" FontWeight="Bold">Num Requests</TextBlock>
                            <TextBlock Text="{Binding Price.NumRequests, Mode=TwoWay}" Width="120" />
                            <TextBlock Text="{Binding CurrentUsage.NumRequests, Mode=TwoWay}" Width="120" />
                        </StackPanel>
                    </StackPanel>

                    <TextBlock Grid.Row="6" Grid.Column="0" Classes="Label">Current Reward</TextBlock>
                    <TextBlock Grid.Row="6" Grid.Column="1" VerticalAlignment="Center" Text="{Binding CurrentReward}"/>
                </Grid>
                <ToolTip.Tip>
                    <StackPanel>
                        <TextBlock Classes="Label">Payment Confirmations</TextBlock>
                        <ItemsControl ItemsSource="{Binding PaymentConfirmation}"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch"/>
                    </StackPanel>
                </ToolTip.Tip>
            </Border>
        </DataTemplate>
        <DataTemplate DataType="{x:Type types:Payment}">
            <Border Classes="Panel">
                <Grid ColumnDefinitions="Auto,Auto" RowDefinitions="Auto,Auto,Auto,Auto,Auto,Auto,Auto">
                    <TextBlock Grid.Row="0" Grid.Column="0" Classes="Label">Amount</TextBlock>
                    <TextBlock Grid.Row="0" Grid.Column="1" Text="{Binding Amount}"/>
                
                    <TextBlock Grid.Row="1" Grid.Column="0" Classes="Label">Transaction Id</TextBlock>
                    <TextBlock Grid.Row="1" Grid.Column="1" Text="{Binding TransactionId}"/>

                    <TextBlock Grid.Row="2" Grid.Column="0" Classes="Label">Signature</TextBlock>
                    <TextBlock Grid.Row="2" Grid.Column="1" Text="{Binding Signature, Converter={StaticResource listConverter}, ConverterParameter=hex}"/>

                    <TextBlock Grid.Row="3" Grid.Column="0" Classes="Label">Signed Bytes</TextBlock>
                    <TextBlock Grid.Row="3" Grid.Column="1"
                        HorizontalAlignment="Left"
                        MaxWidth="970"
                        TextWrapping="Wrap"
                        Text="{Binding SignedBytes, Converter={StaticResource listConverter}, ConverterParameter=string}"/>
                    
                    <TextBlock Grid.Row="4" Grid.Column="0" Classes="Label">Verified</TextBlock>
                    <TextBlock Grid.Row="4" Grid.Column="1" Text="{Binding, Converter={StaticResource signatureConverter}, ConverterParameter=Validate}"/>

                    <TextBlock Grid.Row="5" Grid.Column="0" Classes="Label">Recovered NodeId</TextBlock>
                    <TextBlock Grid.Row="5" Grid.Column="1" Text="{Binding, Converter={StaticResource signatureConverter}, ConverterParameter=RetrieveNodeId}"/>

                    <TextBlock Grid.Row="6" Grid.Column="0" Classes="Label">Recovered Public Key</TextBlock>
                    <TextBlock Grid.Row="6" Grid.Column="1" Text="{Binding, Converter={StaticResource signatureConverter}, ConverterParameter=RetrievePubKey}"/>
                </Grid>
            </Border>
        </DataTemplate>
    </Window.DataTemplates>

    <StackPanel Margin="40">
        <Grid ColumnDefinitions="Auto,Auto,Auto" RowDefinitions="Auto">
            <TextBlock Grid.Row="0" Grid.Column="0" Margin="0 5" FontSize="34" FontWeight="Bold">AI Provider</TextBlock>
            <TextBlock Grid.Row="0" Grid.Column="1" Margin="15" FontSize="18" VerticalAlignment="Center" IsVisible="{Binding Golem.Mainnet}">Mainnet:</TextBlock>
            <TextBlock Grid.Row="0" Grid.Column="1" Margin="15" FontSize="18" VerticalAlignment="Center" IsVisible="{Binding !Golem.Mainnet}">Testnet:</TextBlock>
            <TextBlock Grid.Row="0" Grid.Column="2" Margin="15" FontSize="18" VerticalAlignment="Center" Text="{Binding Golem.Network, Mode=OneWay}" />
        </Grid>
        <StackPanel Orientation="Horizontal">
            <StackPanel>
                <Border Classes="Panel">
                    <StackPanel Margin="20">
                        <TextBlock Classes="Section">Node Info</TextBlock>

                        <Grid ColumnDefinitions="Auto,Auto" RowDefinitions="Auto,Auto,Auto,Auto,Auto,Auto,Auto">
                            <TextBlock Grid.Row="0" Grid.Column="0" Classes="Label">Status</TextBlock>
                            <TextBlock Grid.Row="0" Grid.Column="1" Margin="0 5" FontSize="12" FontWeight="Bold" MinWidth="200" Text="{Binding Golem.Status}"/>

                            <TextBlock Grid.Row="1" Grid.Column="0" Classes="Label">Node id</TextBlock>
                            <TextBlock Grid.Row="1" Grid.Column="1" Margin="0 5" FontSize="12" FontWeight="Bold" MinWidth="200" Text="{Binding Golem.NodeId}"/>

                            <TextBlock Grid.Row="2" Grid.Column="0" Classes="Label">Wallet Address</TextBlock>
                            <TextBox Grid.Row="2" Grid.Column="1" Margin="0 5" FontSize="12" FontWeight="Bold" MinWidth="200" Text="{Binding Golem.WalletAddress, Mode=TwoWay}" IsEnabled="{Binding !Golem.Mainnet}" />

                            <TextBlock Grid.Row="3" Grid.Column="0" Classes="Label">Network Speed</TextBlock>
                            <TextBox Grid.Row="3" Grid.Column="1" Margin="0 5" FontSize="12" FontWeight="Bold" MinWidth="200" Text="{Binding Golem.NetworkSpeed, Mode=TwoWay}"/>

                            <TextBlock Grid.Row="4" Grid.Column="0" Classes="Label">Price</TextBlock>
                            <StackPanel Grid.Row="4" Grid.Column="1" Orientation="Horizontal">
                                <StackPanel>
                                    <TextBlock FontSize="12" FontWeight="Bold">Start Price</TextBlock>
                                    <NumericUpDown Value="{Binding Golem.Price.StartPrice, Mode=TwoWay}" Width="150" Increment="0.001" Minimum="0" Maximum="10"/>
                                </StackPanel>
                                
                                <StackPanel>
                                    <TextBlock FontSize="12" FontWeight="Bold">Price per hour</TextBlock>
                                    <NumericUpDown Value="{Binding Golem.Price.EnvPerSec, Mode=TwoWay}" Width="150" Increment="0.001" Minimum="0" Maximum="10"/>
                                </StackPanel>
                                
                                <StackPanel>
                                    <TextBlock FontSize="12" FontWeight="Bold">GPU usage</TextBlock>
                                    <NumericUpDown Value="{Binding Golem.Price.GpuPerSec, Mode=TwoWay}" Width="150" Increment="0.001" Minimum="0" Maximum="10"/>
                                </StackPanel>

                                <StackPanel>
                                    <TextBlock FontSize="12" FontWeight="Bold">Num Requests</TextBlock>
                                    <NumericUpDown Value="{Binding Golem.Price.NumRequests, Mode=TwoWay}" Width="150" Increment="0.001" Minimum="0" Maximum="10"/>
                                </StackPanel>
                            </StackPanel>

                            <TextBlock Grid.Row="5" Grid.Column="0" Classes="Label">Blacklist</TextBlock>
                            <CheckBox Grid.Row="5" Grid.Column="1" IsChecked="{Binding Golem.BlacklistEnabled, Mode=TwoWay}" FontSize="12" FontWeight="Bold">Enabled</CheckBox>

                            <TextBlock Grid.Row="6" Grid.Column="0" Classes="Label">AllowList</TextBlock>
                            <CheckBox Grid.Row="6" Grid.Column="1" IsChecked="{Binding Golem.FilterRequestors, Mode=TwoWay}" FontSize="12" FontWeight="Bold">Enabled</CheckBox>
                        </Grid>
                    </StackPanel>
                </Border>
                <StackPanel Orientation="Horizontal">
                    <Border Classes="Panel">
                        <StackPanel Margin="20">
                            <TextBlock Classes="Section">Control Panel</TextBlock>
                            <Button Width="160" Command="{Binding OnStartCommand}">Start</Button>
                            <Button Width="160" Command="{Binding OnStopCommand}">Stop</Button>
                            <Button Width="160" Command="{Binding OnSuspendCommand}">Suspend</Button>
                            <Button Width="160" Command="{Binding OnResumeCommand}">Resume</Button>

                            <Button Margin="0 30" Width="160" Command="{Binding OnRunExample}">Run example</Button>
                            <Button Margin="0 30" Width="160" Command="{Binding StopRequestor}">Terminate example</Button>
                            <TextBlock Classes="Label" Text="{Binding App.Message}"/>

                        </StackPanel>
                    </Border>
                    <Border Classes="Panel">
                        <StackPanel Margin="20">
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Classes="Section">Current Task</TextBlock>
                                <Canvas Margin="5" Height="25" Width="25" HorizontalAlignment="Left">
                                    <Ellipse
                                        Width="25"
                                        Height="25"
                                        Fill="Gray"
                                        IsVisible="{Binding Golem.CurrentJob, Converter={x:Static ObjectConverters.IsNull}}"/>

                                    <Ellipse
                                        Width="25"
                                        Height="25"
                                        Fill="Green"
                                        IsVisible="{Binding Golem.CurrentJob, Converter={x:Static ObjectConverters.IsNotNull}}"/>

                                </Canvas>
                            </StackPanel>
                            <ContentControl Content="{Binding Golem.CurrentJob}" />
                        </StackPanel>
                    </Border>
                </StackPanel>
            </StackPanel>
            <Border Classes="Panel">
                <StackPanel Margin="20">
                    <TextBlock Classes="Section">Tasks History</TextBlock>
                    
                    <Border Classes="Panel">
                        <StackPanel>
                            <TextBlock Classes="Label">Since:</TextBlock>
                            <CalendarDatePicker Width="250" SelectedDate="{Binding DateSince}"/>
                            <TimePicker SelectedTime="{Binding TimeSince}" Width="250" ClockIdentifier="24HourClock" MinuteIncrement="5"/>

                            <Button Width="160" HorizontalAlignment="Left" Command="{Binding OnListJobs}">List Jobs</Button>
                        </StackPanel>
                    </Border>

                    <Border MaxHeight="500" Classes="Panel">
                        <ScrollViewer>
                            <ListBox    ItemsSource="{Binding JobsHistory}"
                                        HorizontalAlignment="Stretch"
                                        VerticalAlignment="Stretch"
                                        SelectionMode="Multiple,Toggle"/>
                        </ScrollViewer>
                    </Border>
                </StackPanel>
            </Border>
        </StackPanel>
        <StackPanel>
            <Border Classes="Panel">
                <StackPanel Margin="20">
                    <TextBlock Classes="Section">Events log</TextBlock>
                    <ListBox ItemsSource="{Binding ApplicationEvents}" Height="320">
                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock>
                                        <TextBlock.Inlines>
                                            <Run FontStyle="Italic" Text="{Binding Path=Timestamp}" />
                                            <Run FontStyle="Italic" Text=" # " />
                                        </TextBlock.Inlines>
                                        <TextBlock.Inlines>
                                            <Run FontWeight="Bold" Text="{Binding Path=Source}" />
                                            <Run FontWeight="Bold" Text=": " />
                                        </TextBlock.Inlines>
                                    </TextBlock>
                                    <TextBlock Text="{Binding Path=Message}" />
                                </StackPanel>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>
                </StackPanel>
            </Border>
        </StackPanel>
    </StackPanel>
</Window>
